buildscript {
    ext {
        springBootVersion = '1.3.3.RELEASE'
        springPlatformVersion = '2.0.3.RELEASE'
        springIntegrationVersion = '1.0.7.RELEASE'
        dependencyManagementPlugin = '0.5.2.RELEASE'
        springCloudVersion = '1.0.7.RELEASE'
    }
    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "http://repo.spring.io/release" }
        maven { url "https://plugins.gradle.org/m2/" }		
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("io.spring.gradle:dependency-management-plugin:${dependencyManagementPlugin}")
        classpath("gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.6.0")
    }
}

apply plugin: "io.spring.dependency-management"

apply plugin: 'spring-boot'

apply plugin: 'eclipse'

apply plugin: 'maven'

apply plugin: 'java'

apply plugin: "com.palantir.docker"

repositories {
    mavenLocal()
    mavenCentral()
}

dependencyManagement {
    imports {
        mavenBom("org.springframework.boot:spring-boot-dependencies:${springBootVersion}")
        mavenBom("org.springframework.cloud:spring-cloud-netflix:${springCloudVersion}")
        mavenBom("io.spring.platform:platform-bom:${springPlatformVersion}")
    }
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter")
    
    compile("org.springframework.boot:spring-boot-starter-actuator")
        
    compile("org.springframework.boot:spring-boot-starter-web") {
        exclude module: 'spring-boot-starter-tomcat'
    }
    
    compile("org.springframework.boot:spring-boot-starter-undertow")
    
    compile("org.springframework.cloud:spring-cloud-starter-eureka")
    
    compile('org.springframework.cloud:spring-cloud-starter-zuul')
}

docker {
    name jar.baseName
    dockerfile 'src/main/docker/Dockerfile'
    dependsOn tasks.jar, tasks.bootRepackage, tasks.build
}
